{
	"info": {
		"_postman_id": "01b27851-8c7d-47d1-af34-40d8b67fbfd2",
		"name": "Receptia",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "localhost:3000/rest/foods/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Is list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array')",
							"});",
							"",
							"pm.test(\"Each food in list has correct props\", function () {",
							"    let foods = pm.response.json();",
							"    for(let food of foods){",
							"        pm.expect(food).to.have.all.keys('id','title','text', 'image', 'cost', 'category')",
							"        pm.expect(food.id).to.be.a('number')",
							"        pm.expect(food.id).to.be.above(0)",
							"        pm.expect(food.cost).to.be.above(0)",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/rest/foods/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"foods",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/login/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"ben@node.se\",\n\t\"password\": \"abc123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/login/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/login/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/login/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/login/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:3000/rest/login/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/cart/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/rest/cart/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/login/ Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"ben@node.se\",\n\t\"password\": \"abc123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/login/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/cart/ Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/rest/cart/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/cart-item/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"food\": 2,\n\t\"amount\":1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/cart-item/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"cart-item",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/foods/",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"category\": \"burgers\",\n    \"title\": \"Not a burger\",\n    \"text\": \"This vegetarian, vegan and gluten-free mushroom burger recipe may just surprise you with how tasty it is. While mushrooms provide plenty of flavor and texture, the addition of pinto beans makes this veggie burger recipe high in fiber and protein too. There's not much to them, other than that! Just mash everything up together, form into patties, heat and serve!\",\n    \"image\": \"https://images.unsplash.com/photo-1532768641073-503a250f9754?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=bceece29b062fe6d758ddfa2400c554c&auto=format&w=1024&q=80\",\n    \"cost\": 245\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/foods/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"foods",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/cart/",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/rest/cart/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"cart",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/users/",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"benjamin@node.se\",\n\t\"password\": \"abc123\",\n    \"first_name\": \"Benjamin\",\n    \"last_name\": \"Berglund\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/users/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/users/ PUT",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"id\": 5,\n    \"email\": \"benjamin@node.se\",\n\t\"password\": \"abc123\",\n    \"first_name\": \"Benjamin\",\n    \"last_name\": \"Jonsson\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/users/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/verify/request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 10s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"number\": \"46768540989\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/verify/request",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"verify",
						"request"
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/verify/confirm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": \"9462\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/verify/confirm",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"verify",
						"confirm"
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/comments/",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"I think this that and <script>document.cookie</script> so\",\n    \"author\": \"Ben\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/comments/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"comments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "localhost:3000/rest/comments/",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"I think this that and so\",\n    \"author\": \"Ben\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/rest/comments/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"rest",
						"comments",
						""
					]
				}
			},
			"response": []
		}
	]
}